CDEmu client
3.2.5
~~~~~

Table of Contents:
~~~~~~~~~~~~~~~~~~

1. Introduction
2. Requirements
3. Installation
4. Usage examples
5. Contact information


1. Introduction
~~~~~~~~~~~~~~~

This is cdemu-client, a simple command-line client for controlling CDEmu daemon.
It is part of the cdemu suite, a free, GPL CD/DVD-ROM device emulator
for linux.

It provides a way to perform the key tasks related to controlling the CDEmu
daemon, such as loading and unloading devices, displaying devices' status and
retrieving/setting devices' debug masks.


2. Requirements:
~~~~~~~~~~~~~~~~

 - CMake >= 3.7.0
 - IntlTool >= 0.21
 - GetText >= 0.15

 - Python3 >= 3.4 (default) or Python2 >= 2.7
 - PyGObject >= 3.0.0

 - GLib, GIO >= 2.28 GIR


3. Installation:
~~~~~~~~~~~~~~~~

Please read the INSTALL file.


4. Usage examples:
~~~~~~~~~~~~~~~~~~

Read cdemu-client's man page or run 'cdemu -h' for more information on commands
and their syntax.

Loading a single image to first device:
 cdemu load 0 ~/image.mds

Loading multiple-file image to first device:
 cdemu load 0 ~/session1.toc ~/session2.toc ~/session3.toc

Loading a text-based image in non-ASCII/non-Unicode encoding:
 cdemu load 0 ~/image.cue --encoding=windows-1250

Loading an encrypted image:
 cdemu load 0 ~/image.daa

if image is actually encrypted, the client will query the user for the password.
If started on a terminal it will use that, else it will use the program specified
by the environment variable SSH_ASKPASS. On most systems this variable will
already have been configured. It is possible to override this for
non-interactive setups by using the environment variable CDEMU_ASKPASS.

 CDEMU_ASKPASS="/bin/echo -n plainpassword" cdemu load 0 ~/cdimage.daa

NOTE THAT THIS WILL LEAK YOUR PASSWORD AND IS THEREFORE STRONGLY DISCOURAGED.

Loading a raw image of a CSS-encrypted DVD created by 'dd', so it can be played by mplayer:
 cdemu load 0 ~/image.iso
 cdemu dvd-report-css 0 1

Creating a blank recordable disc: DVD+R SL with ISO image writer:
 cdemu create-blank --writer-id=WRITER-ISO --medium-type=dvd+r 0 ~/output-image.iso

Creating a blank recordable disc: 80-minute CD-R with TOC image writer, with additional writer parameters:
 cdemu create-blank --writer-id=WRITER-TOC --medium-type=cdr80 --param="writer.write_raw=1" --param="writer.write_subchannel=1" 0 ~/output-image.toc

Unloading first device:
 cdemu unload 0

Displaying device status:
 cdemu status

Adding another device:
 cdemu add-device

Removing the last device:
 cdemu remove-device

Displaying device mapping information:
 cdemu device-mapping

Enumerating supported daemon debug masks:
 cdemu enum-daemon-debug-masks

Enumerating supported library debug masks:
 cdemu enum-library-debug-masks

Setting daemon debug mask for the first device:
 cdemu daemon-debug-mask 0 0x01

Setting daemon debug mask for the first device (composite):
 cdemu daemon-debug-mask 0 "0x01|0x02"

Setting daemon debug mask for the first device (composite, by name):
 cdemu daemon-debug-mask 0 "DAEMON_DEBUG_DEVICE|DAEMON_DEBUG_MMC"

Obtaining library debug mask for the first device:
 cdemu library-debug-mask 0

Disabling DPM emulation on all devices:
 cdemu dpm-emulation all 0

Enabling transfer rate emulation on first device:
 cdemu tr-emulation 0 1

Enabling bad sector emulation on first device:
 cdemu bad-sector-emulation 0 1

Changing device ID of first device:
 cdemu device-id 0 "MyVendor" "MyProduct" "1.0.0" "Test device ID"

Enumerating supported image parsers:
 cdemu enum-parsers

Enumerating supported image writers:
 cdemu enum-writers

Enumerating supported filter streams:
 cdemu enum-filter-streams

Obtaining parameter sheet for TOC image writer:
 cdemu enum-writer-parameters WRITER-TOC

Displaying daemon and library version:
 cdemu version


5. Contact information:
~~~~~~~~~~~~~~~~~~~~~~~

CDEmu project's web page: http://cdemu.sourceforge.net
CDEmu project's mailing list: cdemu-devel@lists.sourceforge.net

Author can be directly contacted via e-mail address listed in AUTHORS file.
